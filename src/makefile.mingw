# Copyright (c) 2009-2010 Satoshi Nakamoto
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

USE_UPNP:=1
USE_IPV6:=1
USE_LEVELDB=1

BUILD_RELEASE=1
CC=gcc
CXX=g++
xOPT_LEVEL=-O3

INCLUDEPATHS= \
 -I"E:/cointools/boost_1_68_0" \
 -I"E:/cointools/db-4.8.30/build_unix" \
 -I"E:/cointools/libressl-2.8.2/include"

LIBPATHS= \
 -L"E:/cointools/boost_1_68_0/stage/lib" \
 -L"E:/cointools/db-4.8.30/build_unix" \
 -L"E:/cointools/libressl-2.8.2"

LIBS= \
 -l boost_system-mgw73-mt-x32-1_68 \
 -l boost_filesystem-mgw73-mt-x32-1_68 \
 -l boost_program_options-mgw73-mt-x32-1_68 \
 -l boost_thread-mgw73-mt-x32-1_68 \
 -l boost_chrono-mgw73-mt-x32-1_68 \
 -l ssl \
 -l crypto \
 -l db_cxx

DEFS=-DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS
ifneq (${BUILD_RELEASE}, 1)
 DEBUGFLAGS=-g
endif
CFLAGS=-mthreads $(xOPT_LEVEL) -msse2 -w -Wall -Wextra -Wno-ignored-qualifiers -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)
LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat -Wl,--large-address-aware -static

ifndef USE_UPNP
 override USE_UPNP=-
endif

ifneq (${USE_UPNP}, -)
 INCLUDEPATHS += -I"E:/cointools/miniupnpc-1.6"
 LIBPATHS += -L"E:/cointools/miniupnpc-1.6"
 LIBS += "E:/cointools/miniupnpc-1.6/libminiupnpc.a"
 LIBS += -l iphlpapi
 DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)
endif

ifneq (${USE_IPV6}, -)
 DEFS += -DUSE_IPV6=$(USE_IPV6)
endif

LIBS += -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi

#
# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
#
HEADERS = $(wildcard *.h)

OBJS= \
 obj/alert.o \
 obj/version.o \
 obj/checkpoints.o \
 obj/netbase.o \
 obj/addrman.o \
 obj/crypter.o \
 obj/key.o \
 obj/db.o \
 obj/init.o \
 obj/irc.o \
 obj/keystore.o \
 obj/main.o \
 obj/miner.o \
 obj/net.o \
 obj/protocol.o \
 obj/bitcoinrpc.o \
 obj/rpcdump.o \
 obj/rpcnet.o \
 obj/rpcmining.o \
 obj/rpcwallet.o \
 obj/rpcblockchain.o \
 obj/rpcrawtransaction.o \
 obj/script.o \
 obj/sync.o \
 obj/util.o \
 obj/wallet.o \
 obj/walletdb.o \
 obj/noui.o \
 obj/kernel.o \
 obj/pbkdf2.o \
 obj/scrypt.o \
 obj/scrypt-x86.o \
 obj/scrypt-x86_64.o \
 obj/ntp.o \
 obj/stun.o \
 obj/rpccrypt.o \
 obj/base58.o \
 obj/kernel_worker.o \
 obj/ecies.o \
 obj/cryptogram.o \
 obj/ipcollector.o \

all: SorachanCoind.exe

ifneq (${USE_LEVELDB}, -)
 LIBS += "E:/cointools/leveldb-1.2/libleveldb.a" "E:/cointools/leveldb-1.2/libmemenv.a"
 DEFS += $(addprefix -I,"E:/cointools/leveldb-1.2/include") -DUSE_LEVELDB
 DEFS += $(addprefix -I,"E:/cointools/leveldb-1.2/helpers")
 OBJS += obj/txdb-leveldb.o
 obj/txdb-leveldb.o: E:/cointools/leveldb-1.2/libleveldb.a
else
 OBJS += obj/txdb-bdb.o
endif

obj/%.o: %.cpp $(HEADERS)
	$(CXX) -c $(CFLAGS) -o $@ $<

obj/scrypt-x86.o: scrypt-x86.S
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<

obj/scrypt-x86_64.o: scrypt-x86_64.S
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<

SorachanCoind.exe: $(OBJS:obj/%=obj/%)
	$(CXX) $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)

clean:
	-del /Q SorachanCoind.exe
	-del /Q obj\*

FORCE:

